* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
.menu-container {
    color: #fff;
    background-color: #5995DA;  
    padding: 20px 0;

    
    display: flex;
    justify-content: center;
  }
  
.menu {
    width: 900px;

    display: flex;
    justify-content: space-between;
  }

.signup {
margin-left: auto;
/* 
auto margins eats up all the extra space in a flex container. 
Acomplishes the same layout using one less div. 
*/
}


.links {
    display: flex;
    justify-content: flex-end;
  }

.login {
    margin-left: 20px;
}

.header-container {
    color: #5995DA;
    background-color: #D6E9FE;
    display: flex;
    justify-content: center;
}

.header {
    width: 900px;
    height: 300px;
    display:flex;
    justify-content: space-between;
    align-items: center;
}

.social,
.subscribe {
    align-self: flex-end;
    margin-bottom: 20px;
}


.photo-grid-container {
    display: flex;
    justify-content: center;
}

.photo-grid {
    width: 900px;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;

    flex-direction: row;
    align-items: center;
}

/*  Switching the first row item with the last row item
.first-item {
    order: 1;
}

.last-item{
    order: -1;
}
*/

.photo-grid-item {
    border: 1px solid #fff;
    width: 300px;
    height: 300px;
}

.footer {
    display: flex;
    justify-content: space-between;
}

.footer-item {
    border: 1px solid #000;
    background-color: #D6E9FE;
    height: 200px;
    flex: 1; /* Tells the items to stretch to match the width of the .footer , since they all have the same weight they stretch equally.*/
}

/* You are distributing the space between the items themselves. This allows full control over how flex items fit in their container. */
/*
.footer-three {
    flex:2;
}
*/



.footer-one,
.footer-three {
    background-color: #5995DA;
    width: 300px;
    flex: initial;
    /* Pretty common layout where websites have fixed-width sidebar and a flexible content block containing the main text of the page. */
}
